#include "stdafx.h"

#include "CheckingBasics.h"

TYPE_MIRROR enum EntityXFormFlags
{
	ENTITY_XFORM_POS_check = BIT(1),
	ENTITY_XFORM_ROT_check = BIT(2),
	ENTITY_XFORM_SCL_check = BIT(3),
	ENTITY_XFORM_NO_PROPOGATE_check = BIT(4),
	ENTITY_XFORM_FROM_PARENT_check = BIT(5),  // When parent changes his transformation.
	ENTITY_XFORM_PHYSICS_STEP_check = BIT(13),
	ENTITY_XFORM_EDITOR_check = BIT(14),
	ENTITY_XFORM_TRACKVIEW_check = BIT(15),
	ENTITY_XFORM_TIMEDEMO_check = BIT(16),
	ENTITY_XFORM_NOT_REREGISTER_check = BIT(17), // An optimization flag, when set object will not be re-registered in 3D engine.
	ENTITY_XFORM_NO_EVENT_check = BIT(18), // suppresses ENTITY_EVENT_XFORM event
	ENTITY_XFORM_NO_SEND_TO_ENTITY_SYSTEM_check = BIT(19),
	ENTITY_XFORM_USER_check = 0x1000000,
};

#define CHECK_ENUM(x) static_assert (EntityXFormFlags::x ## _check == EEntityXFormFlags::x, "EEntityXFormFlags enumeration has been changed.")

inline void Check()
{
	CHECK_ENUM(ENTITY_XFORM_POS);
	CHECK_ENUM(ENTITY_XFORM_ROT);
	CHECK_ENUM(ENTITY_XFORM_SCL);
	CHECK_ENUM(ENTITY_XFORM_NO_PROPOGATE);
	CHECK_ENUM(ENTITY_XFORM_FROM_PARENT);
	CHECK_ENUM(ENTITY_XFORM_PHYSICS_STEP);
	CHECK_ENUM(ENTITY_XFORM_EDITOR);
	CHECK_ENUM(ENTITY_XFORM_TRACKVIEW);
	CHECK_ENUM(ENTITY_XFORM_TIMEDEMO);
	CHECK_ENUM(ENTITY_XFORM_NOT_REREGISTER);
	CHECK_ENUM(ENTITY_XFORM_NO_EVENT);
	CHECK_ENUM(ENTITY_XFORM_NO_SEND_TO_ENTITY_SYSTEM);
	CHECK_ENUM(ENTITY_XFORM_USER);
}