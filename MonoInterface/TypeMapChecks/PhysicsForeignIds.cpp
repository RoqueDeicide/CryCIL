#include "stdafx.h"

#include "CheckingBasics.h"

TYPE_MIRROR enum PhysicsForeignIds
{
	PHYS_FOREIGN_ID_TERRAIN_check = 0,
	PHYS_FOREIGN_ID_STATIC_check = 1,
	PHYS_FOREIGN_ID_ENTITY_check = 2,
	PHYS_FOREIGN_ID_FOLIAGE_check = 3,
	PHYS_FOREIGN_ID_ROPE_check = 4,
	PHYS_FOREIGN_ID_SOUND_OBSTRUCTION_check = 5,
	PHYS_FOREIGN_ID_SOUND_PROXY_OBSTRUCTION_check = 6,
	PHYS_FOREIGN_ID_SOUND_REVERB_OBSTRUCTION_check = 7,
	PHYS_FOREIGN_ID_WATERVOLUME_check = 8,
	PHYS_FOREIGN_ID_BREAKABLE_GLASS_check = 9,
	PHYS_FOREIGN_ID_BREAKABLE_GLASS_FRAGMENT_check = 10,
	PHYS_FOREIGN_ID_RIGID_PARTICLE_check = 11,
	PHYS_FOREIGN_ID_RESERVED1_check = 12,
	PHYS_FOREIGN_ID_RAGDOLL_check = 13,

	PHYS_FOREIGN_ID_USER_check = 100, // All user defined foreign ids should start from this enum.
};

#define CHECK_ENUM(x) static_assert (PhysicsForeignIds::x ## _check == EPhysicsForeignIds::x, "EPhysicsForeignIds enumeration has been changed.")

inline void Check()
{
	CHECK_ENUM(PHYS_FOREIGN_ID_TERRAIN);
	CHECK_ENUM(PHYS_FOREIGN_ID_STATIC);
	CHECK_ENUM(PHYS_FOREIGN_ID_ENTITY);
	CHECK_ENUM(PHYS_FOREIGN_ID_FOLIAGE);
	CHECK_ENUM(PHYS_FOREIGN_ID_ROPE);
	CHECK_ENUM(PHYS_FOREIGN_ID_SOUND_OBSTRUCTION);
	CHECK_ENUM(PHYS_FOREIGN_ID_SOUND_PROXY_OBSTRUCTION);
	CHECK_ENUM(PHYS_FOREIGN_ID_SOUND_REVERB_OBSTRUCTION);
	CHECK_ENUM(PHYS_FOREIGN_ID_WATERVOLUME);
	CHECK_ENUM(PHYS_FOREIGN_ID_BREAKABLE_GLASS);
	CHECK_ENUM(PHYS_FOREIGN_ID_BREAKABLE_GLASS_FRAGMENT);
	CHECK_ENUM(PHYS_FOREIGN_ID_RIGID_PARTICLE);
	CHECK_ENUM(PHYS_FOREIGN_ID_RESERVED1);
	CHECK_ENUM(PHYS_FOREIGN_ID_RAGDOLL);

	CHECK_ENUM(PHYS_FOREIGN_ID_USER);
}