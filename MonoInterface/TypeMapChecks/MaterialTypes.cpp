#include "stdafx.h"

#include "CheckingBasics.h"

TYPE_MIRROR enum MaterialLayerFlags
{
	// Active layers flags

	MTL_LAYER_FROZEN_check = 0x0001,
	MTL_LAYER_WET_check = 0x0002,
	MTL_LAYER_CLOAK_check = 0x0004,
	MTL_LAYER_DYNAMICFROZEN_check = 0x0008,

	// Usage flags

	MTL_LAYER_USAGE_NODRAW_check = 0x0001,
	MTL_LAYER_USAGE_REPLACEBASE_check = 0x0002,
	MTL_LAYER_USAGE_FADEOUT_check = 0x0004,

	// Blend offsets

	MTL_LAYER_BLEND_FROZEN_check = 0xff000000,
	MTL_LAYER_BLEND_WET_check = 0x00fe0000,
	MTL_LAYER_BIT_CLOAK_DISSOLVE_check = 0x00010000,
	MTL_LAYER_BLEND_CLOAK_check = 0x0000ff00,
	MTL_LAYER_BLEND_DYNAMICFROZEN_check = 0x000000ff,

	MTL_LAYER_FROZEN_MASK_check = 0xff,
	MTL_LAYER_WET_MASK_check = 0xfe,
	MTL_LAYER_CLOAK_MASK_check = 0xff,
	MTL_LAYER_DYNAMICFROZEN_MASK_check = 0xff,

	MTL_LAYER_BLEND_MASK_check = (MTL_LAYER_BLEND_FROZEN | MTL_LAYER_BLEND_WET | MTL_LAYER_BIT_CLOAK_DISSOLVE | MTL_LAYER_BLEND_CLOAK | MTL_LAYER_BLEND_DYNAMICFROZEN),

	// Slot count

	MTL_LAYER_MAX_SLOTS_check = 3
};

#define CHECK_ENUM(x) static_assert (MaterialLayerFlags::x ## _check == EMaterialLayerFlags::x, "EMaterialLayerFlags enumeration has been changed.")

inline void Check()
{
	CHECK_ENUM(MTL_LAYER_FROZEN);
	CHECK_ENUM(MTL_LAYER_WET);
	CHECK_ENUM(MTL_LAYER_CLOAK);
	CHECK_ENUM(MTL_LAYER_DYNAMICFROZEN);
	CHECK_ENUM(MTL_LAYER_USAGE_NODRAW);
	CHECK_ENUM(MTL_LAYER_USAGE_REPLACEBASE);
	CHECK_ENUM(MTL_LAYER_USAGE_FADEOUT);
	CHECK_ENUM(MTL_LAYER_BLEND_FROZEN);
	CHECK_ENUM(MTL_LAYER_BLEND_WET);
	CHECK_ENUM(MTL_LAYER_BIT_CLOAK_DISSOLVE);
	CHECK_ENUM(MTL_LAYER_BLEND_CLOAK);
	CHECK_ENUM(MTL_LAYER_BLEND_DYNAMICFROZEN);
	CHECK_ENUM(MTL_LAYER_FROZEN_MASK);
	CHECK_ENUM(MTL_LAYER_WET_MASK);
	CHECK_ENUM(MTL_LAYER_CLOAK_MASK);
	CHECK_ENUM(MTL_LAYER_DYNAMICFROZEN_MASK);
	CHECK_ENUM(MTL_LAYER_BLEND_MASK);
	CHECK_ENUM(MTL_LAYER_MAX_SLOTS);
}